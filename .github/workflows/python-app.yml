# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  ODA_ONTOLOGY_PATH: tests/oda-ontology.ttl

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest mypy pylint coverage wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f test-requirements.txt ]; then pip install -r test-requirements.txt; fi
        pip install -e .[test]
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || echo "failed lint"
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics || echo "failed second lint"
    - name: PyLint - more lint
      run: |
        pylint -E dispatcher_plugin_nb2workflow || echo 'this is fine!'
    - name: MyPy
      run: |
        mypy dispatcher_plugin_nb2workflow --ignore-missing-imports || echo 'this is fine too!'
    - name: Test with pytest
      run: |
        curl -o $ODA_ONTOLOGY_PATH https://raw.githubusercontent.com/oda-hub/ontology/ecdf2a61f87aac13ae7a96c0f3dad960312adae4/ontology.ttl
        python -m coverage run --source=dispatcher_plugin_nb2workflow -m pytest tests -m "not fullstack" -sv --full-trace --log-cli-level=DEBUG 
    - name: Test full stack
      run: |
        python -m coverage run --source=dispatcher_plugin_nb2workflow -m pytest tests -m "fullstack" -sv --full-trace --log-cli-level=DEBUG 